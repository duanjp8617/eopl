let a = 5 in
  let b = 6 in
    -(b, -(a, 10));
-(123, 44);
is_zero(0);
is_zero(1);
let a = 5 in
  if is_zero(a) then 5 else 4;
let a = -(5, 5) in
  if is_zero(a) then 5 else 4;

let x = 200
    in let f = proc (z) -(z,x)
       in let x = 100
          in let g = proc (z) -(z,x)
             in -((f 1), (g 1));

letrec double(x)
= if is_zero(x) then 0 else -((double -(x,1)), -(0,2))
in (double 6);

letrec
even(x) = if is_zero(x) then 1 else (odd -(x,1))
odd(x) = if is_zero(x) then 0 else (even -(x,1))
in (odd 12);

let x = 0
in letrec even(dummy)
           = if is_zero(x)
             then 1
             else begin
                   set x = -(x,1);
                   (odd 888)
             end
          odd(dummy)
           = if is_zero(x)
             then 0
             else begin
                   set x = -(x,1);
                   (even 888)
             end
in begin set x = 11; (even 888) end;


let g = let count = 0
      	in proc (dummy)
	   begin
            set count = -(count,-(0,1));
            count
           end
in let a = (g 11)
in let b = (g 11)
in -(a,b);

let x = 11
      in let p = proc (y) -(y,x)
in -(setdynamic x = 17 during (p 22), (p 13));

let glo = pair(11,22)
in let f = proc (loc)
let d1 = setright(loc, left(loc)) in let d2 = setleft(glo, 99)
in -(left(loc),right(loc))
in (f glo);